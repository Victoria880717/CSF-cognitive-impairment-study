# Paired line_Fig4

df <- read_excel("Paired line_AD_AD.xlsx") %>% 
  pivot_longer(-Res) %>% 
  mutate(paired = rep(1:(n()/2), each = 2), name = factor(name)) %>% 
  mutate(name = str_replace_all(name, c("Confidence_Pre" = "Pre-CSF", "Confidence_Post" = "Post-CSF")))
df$name <- factor(df$name, levels = c("Pre-CSF", "Post-CSF"))
df2 <- df %>% filter(name == "Post-CSF")
df2$Res <- factor(df2$Res, levels = c("Positive", "Normal", "Negative"))

p <- ggplot(df, aes(name, value)) +
  geom_half_violin(data = df %>% filter(name == "Pre-CSF"), aes(x = name, y = value), position = position_nudge(x = 0), side = "l", fill = "#DEE7F3", linewidth = 0.25, alpha = 1) +
  geom_half_violin(data = df2, aes(x = name, y = value), position = position_nudge(x = 0.2), side = "r", fill = "A9C4E6", linewidth = 0.25, alpha = 1) +
  geom_line(aes(group = paired, color = Res), linewidth = 0.22, position = position_nudge(x =0.1),,show.legend = FALSE) +
  geom_half_boxplot(data = df %>% filter(name == "Pre-CSF"), aes(name, value), position = position_nudge(x = 0), side = "l", fill = NA, linewidth = 0.2, width = 0.2, alpha = 1, outlier.shape = NA, errorbar.draw = FALSE) +
  geom_half_boxplot(data = df2, aes(name, value), position = position_nudge(x = 0.2), side = "r", fill = NA, linewidth = 0.2, width = 0.2, alpha = 1, outlier.shape = NA, errorbar.draw = FALSE) +
  scale_color_manual(values = c("Aβ_Positive" = "#D9423C", "Aβ_Negative" = '#55B7E6' , "Aβ_Neutral" = '#F09739')) +
  scale_fill_manual(values = c("Aβ_Positive" = "#D9423C", "Aβ_Negative" = '#55B7E6' , "Aβ_Neutral" ='#F09739')) +
  labs(x = NULL, y = NULL) +
  theme_classic()+
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), units = "cm"), 
        panel.background = element_blank(),
        axis.line = element_line(color = "black", size = 0.2),
        strip.background = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank(),  
        panel.grid.major.y = element_line(size = 0.01, color = "#e5e5e5"),  
        axis.text.y = element_text(color = "black", size = 10),
        axis.title.y = element_text(size = 12),
        axis.text.x = element_text(margin = margin(t = 2), color = "black", size = 10),
        legend.position = "none",
        axis.ticks.y = element_line(linewidth = 0.2),
        axis.ticks.x = element_blank(),
        panel.spacing.x = unit(0, "lines")) +
  labs(x = "", y = "Diagnostic confidence, %") +
  scale_y_continuous(limits = c(30, 100), breaks = seq(30, 100, by = 10), expand = expansion(add = 0)) +
  coord_cartesian(xlim = c(0.8, 2.2))  
print(p)
